version: "3.8"
services:

  lab5-server:
    build:
      context: ./server
      dockerfile: Dockerfile
    labels:
      - traefik.enable=true
      - traefik.http.routers.lab5-server.rule=Host(`localhost`) && PathPrefix(`/api`)
      - traefik.http.services.api.loadBalancer.sticky.cookie=true
      - traefik.http.services.api.loadBalancer.sticky.cookie.name=server-cookie
      - traefik.http.routers.lab5-web-site.tls=true
      - traefik.http.routers.lab5-web-site.entrypoints=https
    deploy:
      replicas: 5

  lab5-web-site:
    build:
      context: ./web/site
      dockerfile: Dockerfile
    labels:
      - traefik.enable=true
      - traefik.http.routers.lab5-web-site.rule=Host(`localhost`)
      - traefik.http.services.web.loadbalancer.server.port=80
      - traefik.http.routers.lab5-web-site.tls=true
      - traefik.http.routers.lab5-web-site.entrypoints=https
    deploy:
      replicas: 5

  lab5-db: #thanks to : https://github.com/bitnami/containers/blob/main/bitnami/postgresql/README.md
    image: bitnami/postgresql:latest
    container_name: lab5-db
    environment:
      - POSTGRESQL_USERNAME=u_app
      - POSTGRESQL_PASSWORD=super_secret
      - POSTGRESQL_DATABASE=db_app
    volumes:
      - psql:/bitnami/postgresql
    labels:
      - traefik.enable=true
      - traefik.http.routers.lab5-db.rule=Host(`localhost`)
      - traefik.http.services.web.loadbalancer.server.port=3306
    ports:
      - "3307:5432"

  traefik:
    image: traefik:v2.10
    command:
      - --api.insecure=true  # Enable Traefik dashboard
      - --providers.docker
      - --log.level=INFO
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /cert:/src/cert
      - /traefik.yml:/etc/traefik/traefik.yml
    ports:
      - "80:80"
      - "8080:8080" # Traefik dashboard
      - "3306:3307"

volumes:
  psql:

#docker-compose up  --force-recreate -d
#docker-compose down
